<?php

namespace App\Http\Controllers;

use App\Claim;
use App\Http\Requests\Login;
use App\Http\Requests\StoreClaim;
use App\Http\Requests\StoreSettings;
use App\Http\Requests\StoreUser;
use App\Mail\RequestMail;
use App\User;
use Illuminate\Http\Request;
use Illuminate\Mail\Mailable;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Storage;

class UserController extends Controller
{

    public function create() {
        return view('user.create');
    }

    public function store(StoreUser $request) {

        $user = User::create([
           'name' => $request->name,
           'email' => $request->email,
           'password' => bcrypt($request->password),
        ]);

        return redirect()->back()->with('success', "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!");
    }

    public function loginForm() {
        return view('user.login');
    }

    public function login(Login $request) {

        if (Auth::attempt([
            'email' => $request->email,
            'password' => $request->password,
        ])) {
            if (Auth::user()->role_id === 0) {
                Auth::logout();
                return redirect()->back()->with('error', "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Ä–µ—Å—É—Ä—Å–∞!");
            }
            else {
                session()->flash('success', '–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã');
                return redirect()->home();
            }
        }
        return redirect()->back()->with('error', "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!");

    }

    public function logout() {
        Auth::logout();
        return redirect()->route('login.create');
    }

    public function settings() {
        return view('user.profile');
    }

    public function storeSettings(StoreSettings $request) {

        $user = Auth::user();
        $data = $request->all();
        if ($request->hasFile('photo')) {
            Storage::delete($user->photo);
            $folder = date("Y-m-d");
            $data['photo'] = $request->file('photo')->store("images/{$folder}");
        }

        $user->update($data);
        $request->session()->flash('success', '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã üëç');
        return redirect()->back();
    }

    public function newRequest() {

        return view('user.request');
    }

    public function createRequest(StoreClaim $request) {

//        mail('romerayun@gmail.com', '123', '1231231');
//        Mail::to('romerayun@gmail.com')->send(new Mailable());
//        dd('123');
        $res = Claim::create($request->all());

        $id = '00023' . $res->id;

        Mail::to($request->email)->send(new RequestMail($res->id));

        $request->session()->flash('success', '–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ üëç <br>–ù–æ–º–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è - <b>IT-' . $id . '</b>.<br>–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –í–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É üì§');

        return back();
    }

//    public function sendRequest() {
//        Mail::to('romerayun@gmail.com')->send(new RequestMail());
//        return view('user.send');
//    }

}
